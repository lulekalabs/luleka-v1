user  deploy deploy;
worker_processes  2;

events {
  worker_connections  1024;
  accept_mutex on; # "on" if nginx worker_processes > 1
  # use epoll; # enable for Linux 2.6+
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] '
                  '"$request" $status  $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  # main access log
  access_log  /opt/nginx/logs/access.log  main;

  # main error log
  error_log  /opt/nginx/logs/error.log debug;

  # no sendfile on OSX
  sendfile on;

  # These are good default values.
  tcp_nopush          on;
  tcp_nodelay         off;
  # output compression saves bandwidth
  gzip                on;
  gzip_http_version   1.0;
  gzip_comp_level     2;
  gzip_proxied        any;
  gzip_types          text/plain text/css application/x-javascript text/xml application/xml
                      application/xml+rss text/javascript;

  upstream unicorn {
    server unix:/var/www/apps/luleka/shared/sockets/unicorn.sock;
  }

  server {
    listen 80 default deferred;
    server_name staging.luleka.net;
    client_max_body_size 50M;

    root /var/www/apps/luleka/current/public;   # <--- be sure to point to 'public'!

    # this rewrites all the requests to the maintenance.html
    # page if it exists in the doc root. This is for capistrano's
    # disable web task
    if (-f $document_root/system/maintenance.html) {
      rewrite  ^(.*)$  /system/maintenance.html last;
      break;
    }

    location / {

      # needed to forward user's IP address to rails
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;

      proxy_redirect off;
      proxy_max_temp_file_size 0;

      # If the file exists as a static file serve it directly without
      # running all the other rewite tests on it
      if (-f $request_filename) {
        break;
      }
      
      # cache
      if (-f cache/index.html) {
        rewrite (.*) cache/index.html break;
        break;
      }

      if (-f /cache$request_filename.html) {
        rewrite (.*) /cache$1.html break;
        break;
      }
      
      # check for index.html for directory index
      # if its there on the filesystem then rewite
      # the url to add /index.html to the end of it
      # and then break to send it to the next config rules.
      if (-f $request_filename/index.html) {
        rewrite (.*) $1/index.html break;
      }

      # this is the meat of the rails page caching config
      # it adds .html to the end of the url and then checks
      # the filesystem for that file. If it exists, then we
      # rewite the url to have explicit .html on the end
      # and then send it on its way to the next config rule.
      # if there is no file on the fs then it sets all the
      # necessary headers and proxies to our upstream mongrels
      if (-f $request_filename.html) {
        rewrite (.*) $1.html break;
      }

      if (!-f $request_filename) {
        proxy_pass http://unicorn;
        break;
      }
    }

    error_page 500 502 503 504 /500.html;
    location = /50x.html {
      root  /var/www/apps/luleka/current/public;
    }

    # def http header expiration for caching
    location ~* \.(ico|css|js|gif|jp?g|png)(\?[0-9]+)?$ {
      access_log off;
      expires max;
    }

  }

  # HTTPS server
  server {
    listen       443;

    ssl                  on;
    ssl_certificate      /opt/nginx/certs/luleka.com_combined.crt;
    ssl_certificate_key  /opt/nginx/certs/luleka.com.key;
    ssl_session_timeout  5m;
    ssl_protocols  SSLv2 SSLv3 TLSv1;
    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
    ssl_prefer_server_ciphers   on;

    location / {
      # needed to forward user's IP address to rails
      proxy_set_header  X-Real-IP  $remote_addr;

      # needed for HTTPS
      proxy_set_header X_FORWARDED_PROTO https;

      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_max_temp_file_size 0;

      root /var/www/apps/luleka/current/public;

      if (!-f $request_filename) {
        proxy_pass http://unicorn;
        break;
      }

    }
  }
}


